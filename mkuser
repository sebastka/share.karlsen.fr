#!/bin/bash
set -e
#set -x

#######################################
#	Add new user
#		mkuser username
#
#	Arguments:
#		username (string): new user's name
#	Outputs:
#		None
#	Returns:
#		0 upon success
#		>=1 upon error
#######################################
function main() {
	local readonly USAGE="Usage: mkuser username"

	if [[ "${#}" -ne 1 ]]; then
		err "Error: one argument expected, ${#} received"
		err "${USAGE}"
		return 1
	fi

	local readonly username="${1}"

	# No .env file
	if [[ ! -f .env ]]; then
		err "Error: Please configure .env"
		return 2
	fi

	# Load .env
	set -o allexport && source .env && set +o allexport

	# Empty env vars
	if [[ -z "${CONFIG_ADMIN}" ]] || [[ -z "${CONFIG_ADMIN_PW}" ]]; then
		err "Error: Please configure .env"
		return 3
	fi

	mkdir -p passwd

	# Does admin exist
	create_admin

	# Create user
	create_user "${username}"

	return 0
}

#######################################
#	Check if user exists
#######################################
function user_exists() {
	[[ "${#}" -ne 1 ]] && err "Error: user_exists(): one argument expected, ${#} received"
	local readonly username="${1}"

	if grep -q "${username}" "passwd/${username}" &>/dev/null && [[ -d "public_html/${username}/" ]]; then
		return 0
	fi

	return 1
}

#######################################
#	Create admin
#######################################
function create_admin() {
	if ! user_exists "${CONFIG_ADMIN}"; then
		echo "Creating admin user '${CONFIG_ADMIN}'..."

		htpasswd -c -b "passwd/${CONFIG_ADMIN}" "${CONFIG_ADMIN}" "${CONFIG_ADMIN_PW}"
		mkdir -p "public_html/${CONFIG_ADMIN}/"

		# Give admin access to all files
		mkdir -p files
		ln -s ../../files "public_html/${CONFIG_ADMIN}/files"

		echo -e "Copy the following in the Nginx config file:\n"
		echo -e "location /${CONFIG_ADMIN} {\n\tauth_basic \"Restricted area\";\n\tauth_basic_user_file /var/www/share.karlsen.fr/passwd/${CONFIG_ADMIN};\n}\n"
	fi

	return 0
}

#######################################
#	Create user
#######################################
function create_user() {
	[[ "${#}" -ne 1 ]] && err "Error: create_user(): one argument expected, ${#} received"
	local readonly username="${1}"

	if ! user_exists "${username}"; then
		echo "Creating user '${username}'..."

		cp "passwd/${CONFIG_ADMIN}" "passwd/${username}"
		htpasswd "passwd/${username}" "${username}"
		mkdir -p "public_html/${username}/"

		echo -e "Copy the following in the Nginx config file:\n"
		echo -e "location /${username} {\n\tauth_basic \"Restricted area\";\n\tauth_basic_user_file /var/www/share.karlsen.fr/passwd/${username};\n}\n"
	else
		echo "User '${username}' already exists"
		return 1
	fi

	return 0
}

#######################################
#	Print error message to stderr
#	https://google.github.io/styleguide/shellguide.html
#
#	Arguments:
#		string to print to stderr
#	Outputs:
#		Error message to stderr
#	Returns:
#		None
#######################################
function err() {
	echo [2021-09-01T08:21:26+0000]: "${*}" >&2
}

main "${@}"; exit